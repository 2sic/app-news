<link rel="stylesheet" href="@App.Path/dist/liststyles.css" />

@{
    var needle = Request.QueryString["sort"];
    var allData = AsDynamic(Data["Default"]);
    var paging = AsDynamic(Data["Paging"]).FirstOrDefault();
    var allCategories = AsDynamic(App.Data["Category"]);
}

<div class="app-news app-news-default-list">
    @Edit.Toolbar(actions: "new", contentType: "News")
    <div class="app-news-container">
        @if (!String.IsNullOrEmpty(needle)) {
            <div class="app-news-catinfo">
                <h2>@allCategories.Where(x => x.UrlKey == needle).FirstOrDefault().Name</h2>
                @foreach (var c in allCategories)
                {
                    <span><a href="@(App.Settings.NewsPage + "/sort/" + c.UrlKey)">@c.Name</a>&ensp;|&ensp;</span>
                }
            </div>
        }
        @foreach (var item in allData)
        {
            <div class="app-news-item sc-element">
                <div>
                    @Edit.Toolbar(item)
                     @if (!String.IsNullOrEmpty(@item.Image))
                    {
                        <div class="app-news-imagecontainer">
                            <img src="@item.Image?w=400&h=300&mode=crop" alt />
                        </div>
                    }
                    <div class="@(!String.IsNullOrEmpty(@item.Image) ? "app-news-contentcontainer" : "")">
                        <h2>@item.Title</h2>
                        <span class="app-news-date">@item.Date.ToString("dd.MM.yyyy")</span>
                        <span class="app-news-categories">
                        @if (@item.Categories.Count >  0)
                        {
                            @: |
                        } 
                        @foreach (var cat in  @item.Categories)
                        {
                            <span><a href="@(App.Settings.NewsPage + "/sort/" + cat.UrlKey)">@cat.Name</a>&ensp;&ensp;&ensp;</span> 
                        }
                        </span>
                        <p>
                            @item.Teaser    
                        </p>

                        <a class="btn btn-primary" href="@(App.Settings.DetailPage + "/event/" + item.UrlKey)">@Html.Raw(App.Resources.LabelReadMore)</a>
                    </div>
                </div>
            </div>
        }
        @if (!String.IsNullOrEmpty(needle)) {
            <a class="btn btn-primary app-news-backtolist" href="@App.Settings.NewsPage">@Html.Raw(App.Resources.LabelBackToList)</a>
        }
        <div class="app-news-paging">
            @if (!(paging.PageNumber <= 1))
            {
                <a class="app-news-prev-pager" href="@LinkToPageNumber(paging.PageNumber - 1)">&lsaquo;</a>
            }
            @if (@paging.PageSize >= 0)
            {
                for(int i = 1; i <= @paging.PageCount; i++)
                {
                    if (i == paging.PageNumber)
                    {
                        <a class="app-news-paging-active">@i</a>
                    }
                    else
                    {
                        <a href="@LinkToPageNumber(i)">@i</a>
                    }
                }
            }
            @if (!(paging.PageNumber >= paging.PageCount))
            {
                <a class="app-news-next-pager" href="@LinkToPageNumber(paging.PageNumber + 1)">&rsaquo;</a>
            }
        </div>
    </div>
</div>

@functions {
	// generate a paging-link number, preserving current category parameters
    public string LinkToPageNumber(int pageNumber){
        string url = (@App.Settings.NewsPage + "/" + (!String.IsNullOrEmpty(Request.QueryString["sort"]) ? "sort/" + (Request.QueryString["sort"] + "/") : "") + "page/" + pageNumber);
        return url.ToLower();
    }
}