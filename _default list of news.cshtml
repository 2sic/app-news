@using Connect.Koi;

@{
    var lib = CreateInstance("_library.cshtml"); 

    var catFilter = Request.QueryString["category"];
    var hasCategoryFilter = !String.IsNullOrEmpty(catFilter);
    var allCategories = AsDynamic(App.Data["Category"]);

    var newsPage = Dnn.Tab.FullUrl;
    var newsPageTab = Dnn.Module.TabID;

    var newsToShow = AsDynamic(Data["News"]);
    
    if(Permissions.UserMayEditContent)
    {
        newsToShow = AsDynamic(Data["Admin"]);
    }
}

@if(!String.IsNullOrEmpty(Content.NewsPage)) 
{
    newsPage = Content.NewsPage;
    newsPageTab = int.Parse((AsEntity(Content).GetBestValue("NewsPage")).Split(':')[1]);
}


<div class="app-news app-news-list sc-element @((Permissions.UserMayEditContent) ? "app-edit" : "")" >
    @Edit.Toolbar(actions: "new, contentitems", contentType: "News", prefill: new { Date = DateTime.Now.Date, ShowFrom = DateTime.Now.Date, ShowTo =  (DateTime.Now.Date.AddYears(3)).Date } , settings: new { hover = "left", showCondition = true })
    @Edit.Toolbar(Content)
    <!--Category Filter == Displayed only if a category has been selected -->
        @if (hasCategoryFilter) {
            <div class="app-catinfo">
                <h2>@allCategories.Where(x => x.UrlKey == catFilter).FirstOrDefault().ShowedTitle</h2>
                <span><a @Koi.Class("bs3='btn btn-primary btn-xs' bs4,unk='btn btn-primary btn-sm'") href="@newsPage">@App.Resources.LabelCategoryAll</a></span>
                @foreach (var c in allCategories)
                {
                    <span><a @Koi.Class("all='" + (Request.QueryString["category"] == c.UrlKey ? "active" : "") + "' bs3='btn btn-primary btn-xs' bs4,unk='btn btn-primary btn-sm'") href="@lib.LinkToPage(newsPageTab, "category", c.UrlKey, "", "", "", "")">@c.Name</a></span>
                }
            </div>
        }
    <div class="row">
        
        <!-- Beginning of content loop -->
        @foreach (var item in newsToShow)
        {
        <div @Koi.Class("all='sc-element' bs3='col col-xs-12 col-sm-12 col-md-12 col-lg-12' bs4,unk='col-12 col-md-12 col-lg-12 col-xl-12'")>
            @Edit.Toolbar(item)
            @{
                string detailsLink = @lib.LinkToPage(newsPageTab, "mid", ((String.IsNullOrEmpty(Content.MainModuleId)) ? (Dnn.Module.ModuleID).ToString() : (Content.MainModuleId)), "details", item.EntityId.ToString(), "title", item.UrlKey);
            }
            <div class="app-details-link">
                <a class="link-overlay" href="@detailsLink"></a>
                <div class="row">
                    <div @Koi.Class("all='mb-3 mb-md-0' bs3='col-xs-12 col-sm-6 col-md-4' bs4,unk='col-12 col-md-6 col-lg-4'")>
                    <!-- Image or Placeholder -->
                       
                         @if (!String.IsNullOrEmpty(@item.Image))
                        {
                           
                            <div class="app-img">
                                <span class="overlay"></span>
                                <img @Koi.Class("all='' bs3='img-responsive' bs4,oth='img-fluid'") src="@item.Image?w=800&h=480&mode=crop&scale=both&quality=80&anchor=@item.CropAnchor" alt="@item.Title" />
                            </div>
                          
                        }
                        else
                        {
                            <div class="app-img app-news-missing-img @((String.IsNullOrEmpty(@item.Image)) ? "app-noimg" : "")">
                                <span class="overlay" style="background-image: url(@App.Resources.PlaceholderMissingImage?max-width=600&amp;mode=max&amp;scale=both&amp;quality=80);"></span>
                                <img  @Koi.Class("bs3='img-responsive' bs4,unk='img-fluid'") src="@App.Path/res/trans.png?w=800&amp;h=480&amp;mode=crop&amp;scale=both&amp;quality=80" alt="" />
                            </div>
                        }
                    </div>
                
                    <div @Koi.Class("bs3='col-xs-12 col-sm-6 col-md-8' bs4,unk='col-12 col-md-6 col-lg-8'")>
                    <!-- Text Date Categories -->
                        <div class="app-text">
                            @if(item.ShowFrom.Date > DateTime.Now.Date)
                                {
                                    <div class="alert alert-warning" role="alert">
@App.Resources.LabelShowFromPill&nbsp;@item.ShowFrom.Date.ToString("dd.MM.yyyy")</div>
                                }
                                @if(item.ShowTo.Date <= DateTime.Now.Date)
                                {
                                    <div class="alert alert-danger" role="alert">
@App.Resources.LabelShowToPill&nbsp;@item.ShowTo.Date.ToString("dd.MM.yyyy")</div>
                                }
                            <h2 class="app-list">
                                @item.Title
                                
                            </h2>
                        
                            <span class="app-date @((item.Categories.Count >  0 && App.Settings.ActivateCategories) ? "app-date-border" : "")">@item.Date.ToString("dd.MM.yyyy")</span>
                            <span class="app-categories">
                            @if(App.Settings.ActivateCategories) {
                                foreach (var cat in  @item.Categories)
                                {
                                    <a href="@lib.LinkToPage(newsPageTab, "category", cat.UrlKey, "", "", "", "")">@cat.Name</a>
                                }
                            }
                            </span>
                        
                            <p>
                                @Html.Raw(item.Teaser.Replace("\n", "<br />"))
                            </p>
                        </div>
                        
                        <span class="app-readmore">@Html.Raw(App.Resources.LabelReadMore)</span>
                    </div>
                </div>
            </div>                    
        </div>
        } <!-- END of content loop -->

    </div>
    @if (hasCategoryFilter) {
        <a @Koi.Class("all='app-backtolist' bs3='btn btn-primary' bs4,unk='btn btn-outline-primary'") href="@newsPage">@Html.Raw(App.Resources.LabelBackToList)</a>
    }

    @if (Content.ShowPagination) {
        @RenderPage("_paging.cshtml", new { newsPage = newsPage }) 
    }
</div>

<link rel="stylesheet" href="@App.Path/dist/@(Koi.PickCss("bs3,bs4", "bs3")).css" data-enableoptimizations="true" />
<script src="@App.Path/dist/script.js" data-enableoptimizations="true" ></script>
