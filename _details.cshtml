@{
    var item = AsDynamic(Data["Default"]).FirstOrDefault();

    var lib = CreateInstance("_library.cshtml");
    
    var newsPage = "";
    var newsPageTab = @Dnn.Module.TabID;
}
@if(!String.IsNullOrEmpty(Content.NewsPage)) 
{
    newsPage = Content.NewsPage;
    newsPageTab = int.Parse((AsEntity(Content).GetBestValue("NewsPage")).Split(':')[1]);
}

<link href="https://fonts.googleapis.com/css?family=Roboto:300,400,700" rel="stylesheet" data-enableoptimizations="true" />
<link rel="stylesheet" href="@App.Path/dist/detailstyles.css" data-enableoptimizations="true" />

<div class="app-news app-news-detail sc-element">
    @Edit.Toolbar(item)
    <div class="app-news-detail-contentcontainer @(!String.IsNullOrEmpty(@item.Image) ? "app-news-detail-withimage" : "")">
        <h1>@item.Title</h1>
        <span class="app-news-date">@item.Date.ToString("dd.MM.yyyy")</span>
        <span class="app-news-categories">
        @if (@item.Categories.Count >  0)
        {
            @: |
        } 
        @foreach (var cat in  @item.Categories)
        {
            <span><a href="@lib.LinkToPage(newsPageTab, "category", cat.UrlKey)">@cat.Name</a>&ensp;&ensp;&ensp;</span>
        }
        </span>
    </div>
    @if (!String.IsNullOrEmpty(@item.Image))
    {
        <div class="app-news-detail-imagecontainer">
            <img src="@item.Image" alt />
        </div>
    }

    <p class="app-news-detail-body">
        @Html.Raw(item.Body)
        @ToSic.SexyContent.ContentBlocks.Render.All(item, field: "BodyContentBlocks", merge: item.Body)
    </p>

    <a class="btn btn-primary app-news-backtolist" href="@Link.To()">@Html.Raw(App.Resources.LabelBackToList)</a>
</div>