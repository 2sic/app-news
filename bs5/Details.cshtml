@inherits Custom.Hybrid.RazorTyped
@using ToSic.Razor.Blade;

@{
  // Combine Image-Resize settings for "NewsDetails" to fallback on any other settings using default "Content"
  var imgSettings = AsStack(AllSettings.Get("Images.NewsDetails"), AllSettings.Get("Images.Content"));
  // Get some helper commands for later on
  var helpers = GetCode("../shared/Helpers.cs");
  var detailsCode = GetCode("Details.cs"); 

  var article = AsItems(MyData).FirstOrDefault();

  @* Show article not found notification and stop processing *@
  if (article == null) {
    <h1>@App.Resources.String("LabelEventNotExists")</h1>
    <p>@App.Resources.String("LabelEventNotExistsText")</p>

    @* Show "Back to list" button *@
    @detailsCode.BackToListButton()
    Kit.Page.SetHttpStatus(404);
    return;
  }

  var title = article.String("Title");
  var displayCategories = App.Settings.Bool("ActivateCategories") && (article.Children("Categories")).Any();
  Kit.Page.AddMeta("description", article.String("Teaser", scrubHtml: true));
  Kit.Page.SetTitle(article.DateTime("Date").ToString("d") + " - " + title);

  var articleToolbar = Kit.Toolbar.Default().Layout("-").Delete();
}

<div class="app-news5 app-news5-detail" @articleToolbar.For(article)>
  @* Head of the article *@
  <div class="app-news5-content">
    @* "Will publish"/"expired" notes for admin *@
    @helpers.AdminArticleInformation(article)
    <h2>@title</h2>
    @* Show Date and categories *@
    <span class='app-news5-date @(displayCategories ? "app-news5-date-border" : "")'>@article.DateTime("Date").ToString("d")</span>
    @if (displayCategories) {
      <span class="app-news5-categories">
        @foreach (var cat in article.Children("Categories")) {
          <a href='@Link.To(parameters: "category=" + cat.String("UrlKey"))'>@cat.String("Name")</a>
        }
      </span>
    }
  </div>

  @* Body of the article *@
  <div class="app-news5-content">
    @* Show image or placeholder *@
    @if (article.Bool("Lightbox") && article.IsNotEmpty("Image")) {
      var lbPic = article.Picture("Image", settings: "Lightbox", imgAltFallback: title);

      var tags = Kit.HtmlTags;
      var fancyboxData = tags.RawHtml(
        tags.Attr("data-srcset", lbPic.SrcSet),
        tags.Attr("data-sizes", lbPic.Sizes),
        tags.Attr("data-src", lbPic.Src),
        tags.Attr("data-preload", false),
        tags.Attr("data-caption", lbPic.Alt)
      );
            
      @:<a class="fancybox" @fancyboxData data-app-news5-fancybox="@UniqueKey" title="@lbPic.Alt">
    }
      <div class="app-news5-detail-img">
        <span class="overlay"></span>

        @(article.IsNotEmpty("Image")
                ? article.Picture("Image", imgAltFallback: title)
                : App.Resources.Picture("PlaceholderMissingImage"))
      </div>
    @if (article.Bool("Lightbox")) {
      @:</a>
    }

    @* Teaser *@
    @if (article.Bool("ShowTeaserInDetail")) {
      <p class="app-news5-detail-teaser">
          @article.Html("Teaser", container:"")
       </p>
    }

    @* Body of the post - will also create inner info blocks / apps *@
    <div class="app-news5-detail-body">
      @Kit.Render.All(article, field: "InnerContent", merge: article.String("Content"))
    </div>
  </div>
</div>

@* Show "Back to list" button *@
@detailsCode.BackToListButton()

@Html.Partial("./Assets.cshtml", new { scripts = true} )