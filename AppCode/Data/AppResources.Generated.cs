// DO NOT MODIFY THIS FILE - IT IS AUTO-GENERATED
// See also: https://go.2sxc.org/copilot-data
// To extend it, create a "AppResources.cs" with this contents:
/*
namespace AppCode.Data
{
  public partial class AppResources
  {
    // Add your own properties and methods here
  }
}
*/

// Generator:   CSharpDataModelsGenerator v17.06.02
// App/Edition: News/
// User:        2sic Web-Developer
// When:        2024-04-09 07:32:22Z
using ToSic.Sxc.Adam;

namespace AppCode.Data
{
  // This is a generated class for AppResources (scope: System.App)
  // To extend/modify it, see instructions above.

  /// <summary>
  /// AppResources data. <br/>
  /// Generated 2024-04-09 07:32:22Z. Re-generate whenever you change the ContentType. <br/>
  /// <br/>
  /// Default properties such as `.Title` or `.Id` are provided in the base class. <br/>
  /// Most properties have a simple access, such as `.LabelAdminDetailPageWarning`. <br/>
  /// For other properties or uses, use methods such as
  /// .IsNotEmpty("FieldName"), .String("FieldName"), .Children(...), .Picture(...), .Html(...).
  /// </summary>
  /// <remarks>
  /// This Content-Type is NOT in the default scope, so you may not see it in the Admin UI. It's in the scope System.App.
  /// </remarks>
  public partial class AppResources: AutoGenerated.ZagAppResources
  {  }
}

namespace AppCode.Data.AutoGenerated
{
  /// <summary>
  /// Auto-Generated base class for System.App.AppResources in separate namespace and special name to avoid accidental use.
  /// </summary>
  public abstract class ZagAppResources: Custom.Data.CustomItem
  {
    /// <summary>
    /// LabelAdminDetailPageWarning as string. <br/>
    /// For advanced manipulation like scrubHtml, use .String("LabelAdminDetailPageWarning", scrubHtml: true) etc.
    /// </summary>
    public string LabelAdminDetailPageWarning => _item.String("LabelAdminDetailPageWarning", fallback: "");

    /// <summary>
    /// LabelAdminMenuManage as string. <br/>
    /// For advanced manipulation like scrubHtml, use .String("LabelAdminMenuManage", scrubHtml: true) etc.
    /// </summary>
    public string LabelAdminMenuManage => _item.String("LabelAdminMenuManage", fallback: "");

    /// <summary>
    /// LabelAdminMenuNew as string. <br/>
    /// For advanced manipulation like scrubHtml, use .String("LabelAdminMenuNew", scrubHtml: true) etc.
    /// </summary>
    public string LabelAdminMenuNew => _item.String("LabelAdminMenuNew", fallback: "");

    /// <summary>
    /// LabelBackToList as string. <br/>
    /// For advanced manipulation like scrubHtml, use .String("LabelBackToList", scrubHtml: true) etc.
    /// </summary>
    public string LabelBackToList => _item.String("LabelBackToList", fallback: "");

    /// <summary>
    /// LabelCategoryAll as string. <br/>
    /// For advanced manipulation like scrubHtml, use .String("LabelCategoryAll", scrubHtml: true) etc.
    /// </summary>
    public string LabelCategoryAll => _item.String("LabelCategoryAll", fallback: "");

    /// <summary>
    /// LabelEventNotExists as string. <br/>
    /// For advanced manipulation like scrubHtml, use .String("LabelEventNotExists", scrubHtml: true) etc.
    /// </summary>
    public string LabelEventNotExists => _item.String("LabelEventNotExists", fallback: "");

    /// <summary>
    /// LabelEventNotExistsText as string. <br/>
    /// For advanced manipulation like scrubHtml, use .String("LabelEventNotExistsText", scrubHtml: true) etc.
    /// </summary>
    public string LabelEventNotExistsText => _item.String("LabelEventNotExistsText", fallback: "");

    /// <summary>
    /// LabelReadMore as string. <br/>
    /// For advanced manipulation like scrubHtml, use .String("LabelReadMore", scrubHtml: true) etc.
    /// </summary>
    public string LabelReadMore => _item.String("LabelReadMore", fallback: "");

    /// <summary>
    /// LabelShowFromPill as string. <br/>
    /// For advanced manipulation like scrubHtml, use .String("LabelShowFromPill", scrubHtml: true) etc.
    /// </summary>
    public string LabelShowFromPill => _item.String("LabelShowFromPill", fallback: "");

    /// <summary>
    /// LabelShowToPill as string. <br/>
    /// For advanced manipulation like scrubHtml, use .String("LabelShowToPill", scrubHtml: true) etc.
    /// </summary>
    public string LabelShowToPill => _item.String("LabelShowToPill", fallback: "");

    /// <summary>
    /// PlaceholderMissingImage as link (url). <br/>
    /// To get the underlying value like 'file:72' use String("PlaceholderMissingImage")
    /// </summary>
    public string PlaceholderMissingImage => _item.Url("PlaceholderMissingImage");

    /// <summary>
    /// Get the file object for PlaceholderMissingImage - or null if it's empty or not referencing a file.
    /// </summary>
    public IFile PlaceholderMissingImageFile => _item.File("PlaceholderMissingImage");

    /// <summary>
    /// Get the folder object for PlaceholderMissingImage.
    /// </summary>
    public IFolder PlaceholderMissingImageFolder => _item.Folder("PlaceholderMissingImage");
  }
}