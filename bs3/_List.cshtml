@inherits ToSic.Sxc.Dnn.RazorComponent
@using ToSic.Razor.Blade;
@using ToSic.Sxc.Search;
@using ToSic.Eav.Run;

@Html.Partial("shared/_Assets.cshtml")

@{
  var parts = CreateInstance("shared/_Parts.cshtml");

  var viewConfiguration = Content;
  var articles = AsList(Data["News"]);
  var categories = AsList(App.Data["Category"]);
  var categoryQueryString = Request.QueryString["category"];
  var filteredCategory = AsList(Data["Category"]).FirstOrDefault();
  var pages = AsList(Data["Paging"]).FirstOrDefault();
}

@* Show Toolbar Menu if admin *@
@if(Edit.Enabled) {
  @parts.AdminToolbarMenu(viewConfiguration)
  @parts.DetailsPageConfigWarning()
}

<div class="app-news5 app-news5-list">
  @* Show category filter if the news are filtered by category querystring *@
  @if (Text.Has(categoryQueryString) && filteredCategory != null) {
    @parts.CategoryFilter(categories, filteredCategory)
  }

  @* List the articles *@
  @parts.ListArticlesSingleCol(articles, categoryQueryString)

  @* Show "Back to list" button if the news are filtered by category querystring *@
  @if (Text.Has(categoryQueryString) && filteredCategory != null) {
    @parts.BackToListButton("")
  }

  @* Show pagination if configured *@
  @if (viewConfiguration.ShowPagination) {
    @parts.Paging(pages, categoryQueryString)
  }
</div>

@functions{
  /// <summary>
  /// Populate the search - ensure that each entity has an own url/page
  /// </summary>
  /// <param name="searchInfos"></param>
  /// <param name="moduleInfo"></param>
  /// <param name="beginDate"></param>

  public override void CustomizeSearch(Dictionary<string, List<ISearchItem>> searchInfos, IContainer moduleInfo, DateTime beginDate) {
    var parts = CreateInstance("shared/_Parts.cshtml");
    foreach (var si in searchInfos["SearchIndex"]) {
      var article = AsDynamic(si.Entity);
      si.QueryString = parts.DetailPageQueryString(article, "");
    }

    // Remove not needed streams
    var keys = searchInfos.Keys.ToList();
    foreach(var key in keys) {
      if (key != "SearchIndex") {
        searchInfos.Remove(key);
      }
    }
  }
}
